<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 2022.01.24 윤상현 -->
<mapper namespace="mapper.myPage">

	<!-- 주문정보와 상품정보를 담기 위한 ResultMap -->
	<resultMap id="orderResult" type="java.util.Map">

		<result property="order_id" column="order_id" />
		<result property="user_id" column="user_id" />
		<result property="product_id" column="product_id" />
		<result property="order_amount" column="order_amount" />
		<result property="order_date" column="order_date" />
		<result property="order_state" column="order_state" />
		<result property="product_main_title" column="product_main_title" />
		<result property="product_price" column="product_price" />
		<result property="product_discount" column="product_discount" />
		<result property="order_delivery_id" column="order_delivery_id" />

	</resultMap>

	<resultMap id="myQuestionResult" type="java.util.Map">

		<result property="notice_id" column="notice_id" />
		<result property="notice_title" column="notice_title" />
		<result property="notice_body" column="notice_body" />
		<result property="notice_cre_date" column="notice_cre_date" />
		<result property="notice_type" column="notice_type" />
		<result property="notice_grade" column="notice_grade" />
		<result property="product_id" column="product_id" />
		<result property="notice_match_no" column="notice_match_no" />
		<result property="notice_parent_no" column="notice_parent_no" />
		<result property="user_id" column="user_id" />
		<result property="user_rank" column="user_rank" />
		<result property="product_main_title" column="product_main_title" />

	</resultMap>

	<!-- 장바구니 수량 조회 쿼리 -->
	<select id="myPageCartCount" resultType="java.lang.Integer" parameterType="userVO">

		select if(sum(cart_count), sum(cart_count), 0) as 'cartCount' from cart where user_id = #{user_id}

	</select>

	<select id="myPageOrderCount" resultType="java.lang.Integer" parameterType="userVO">

		select count(*) from orders where user_id = #{user_id} and order_state between 0 and 1

	</select>

	<delete id="dropOut" parameterType="String">
	
		<![CDATA[
			delete from user where user_id = #{user_id}	
		]]>
	</delete>

	<!-- 회원정보 수정 쿼리 -->
	<update id="updateMyInfo" parameterType="java.util.Map">

		<![CDATA[
		update user set
			user_pw = #{user_pw},
			user_email = #{user_email},
			user_mobile_1 = #{user_mobile_1},
			user_mobile_2 = #{user_mobile_2},
			user_mobile_3 = #{user_mobile_3},
			user_new_address = #{user_new_address},
			user_detail_address = #{user_detail_address}
		where user_id = #{user_id}
		]]>

	</update>


	<!-- 옵션에 따른 주문 정보 조회 쿼리 -->
	<select id="selectOrder" resultMap="orderResult" parameterType="java.util.Map">
		select 
			o.order_id, 
			o.user_id, 
			o.product_id, 
			o.order_amount, 
			o.order_delivery_id,
			o.order_date, 
			o.order_state, 
			p.product_price, 
			p.product_discount, 
			p.product_main_title,
			n.notice_id 
		from orders as o 
		inner join product as p on o.product_id = p.product_id 
		left outer join notice as n on o.order_id = n.order_id
		where o.user_id = #{user_id}
		<if test="search_option != null and !search_option.equals('')">
			<if test='search_option == "orderDate"'>
				and o.order_date between #{begin} and date_add(#{end}, interval 1 day) order by o.order_date desc
			</if>
			<if test='search_option == "productId"'>
				and p.product_main_title like concat('%', #{search_value}, '%') order by o.order_date desc
			</if>

			<if test='search_option == "state"'>
				<if test='search_value lt -1'>
				and o.order_state between -2 and -3 order by o.order_date desc
			</if>
				<if test='search_value gte -1'>
				and o.order_state = #{search_value} order by o.order_date desc
			</if>

			</if>
		</if>

		<if test="search_option == null or search_option.equals('')">
				 order by o.order_date desc
		</if>


	</select>

	<!-- 주문상태 수정 쿼리 -->
	<update id="updateOrder" parameterType="java.util.Map">

		<!-- 구매확정 쿼리 -->
		<if test='update_option == "deliveryCompleted"'>
		update orders as o, user as u set 
			o.order_state=2,
			u.user_point = u.user_point + #{point},
			u.user_total_point = u.user_total_point + #{point}
		where	 
			o.order_id = #{order_id}
			and u.user_id = #{user_id}
	</if>

		<!-- 주문취소 쿼리 -->
		<if test='update_option == "cancelOrder"'>
		update orders as o, user as u set 
			o.order_state = -1,
			u.user_total_amount = u.user_total_amount - #{amount},
			u.user_total_count = u.user_total_count - #{count}
		where	 
			o.order_id = #{order_id}
			and u.user_id = #{user_id}
	</if>

	</update>

	<!-- 반품 등록 쿼리 -->
	<insert id="askRefund" parameterType="NoticeVO" useGeneratedKeys="true" keyColumn="notice_id" keyProperty="notice_id">

		<selectKey keyProperty="notice_id" resultType="String" order="BEFORE">
		select concat('notice_', (select nextval('notice')))
	</selectKey>

		<![CDATA[
			insert into notice (
				notice_id, 
				user_id,
				notice_category, 
				notice_title,
				notice_body,
				notice_type,
				order_id,
				notice_match_no,
				notice_parent_no
				)
			values (
				#{notice_id},
				#{user_id},
				#{notice_category}, 
				#{notice_title},
				#{notice_body}, 
				#{notice_type}, 
				#{order_id},
				#{notice_id},
				0
				)	
		]]>

	</insert>

	<!-- 반품 접수 쿼리 -->
	<update id="askRefundUpdate" parameterType="NoticeVO">

		update orders as o, user as u set 
			o.order_state = -2
		where	 
			o.order_id = #{order_id}
			and u.user_id = #{user_id}

	</update>

	<!-- 주문 상세 쿼리 -->
	<select id="orderDetail" resultType="java.util.Map" parameterType="String">
		select 
			o.*, 
			p.product_main_title, p.product_price, p.product_discount, 
			u.user_name, u.user_mobile_1, u.user_mobile_2, u.user_mobile_3, u.user_membership,
			i.image_file
		from orders as o inner join product as p on o.product_id = p.product_id 
			inner join user as u on o.user_id = u.user_id
			inner join image as i on o.product_id = i.image_match_id
		where
			o.order_id like concat(#{order_id}, '_', '%')
			and i.image_category = 'main'

	</select>

	<!-- 한건희 -->
	<!-- 문의 리스트 -->
	<select id="questionList" resultType="NoticeVO" parameterType="String">
		<![CDATA[
			select notice_id, notice_category, 
				notice_title, notice_type, 
			    notice_cre_date, user_id, notice_match_no, notice_parent_no
			from notice
			where notice_match_no in (select notice_id from notice where user_id=#{user_id}) 
				and notice_category in('PQA','UQA') order by notice_cre_date asc
		]]>
	</select>

	<!-- 문의 내역 페이지 -->
	<select id="questionDetail" resultMap="myQuestionResult" parameterType="String">
		<![CDATA[
			select n.notice_id, n.notice_title, n.notice_body, n.notice_grade, n.product_id, n.user_id, u.user_rank from 
			notice as n inner join user as u on n.user_id = u.user_id where notice_match_no=#{notice_id}
			
		]]>
	</select>
	<!-- 문의 내역 상세 -->
	<select id="PQADetail" resultType="ProductVO" parameterType="String">
		<![CDATA[
			select product_main_title from product where product_id=#{product_id}
		]]>
	</select>

	<!-- 문의 내역/ 문의 삭제 -->
	<delete id="questionDelete" parameterType="String">
		<![CDATA[
			delete from notice where notice_match_no = #{notice_id}
		]]>
	</delete>

	<!-- 문의 내역 수정 -->
	<update id="questionUpdate" parameterType="NoticeVO">
		<if test='notice_private == 0'>
				update notice set  
					notice_private = #{notice_private},
					notice_pw = #{notice_pw},
					notice_type = #{notice_type},
					notice_title = #{notice_title},
					notice_body = #{notice_body}
				where notice_id = #{notice_id}			
			</if>
		<if test='notice_private == 1'>
				update notice set  
					notice_type = #{notice_type},
					notice_title = #{notice_title},
					notice_body = #{notice_body}
				where notice_id = #{notice_id}
			</if>
	</update>

	<!-- 상품후기 리스트 -->
	<select id="selectMyCommentList" resultMap="myQuestionResult" parameterType="String">
		<![CDATA[
			select n.notice_id, n.notice_title, 
				n.notice_body, n.notice_grade, 
				n.product_id, n.user_id, 
				n.notice_match_no, u.user_rank, 
				n.notice_cre_date, p.product_main_title
			from  notice as n 
			    inner join user as u 
			    on n.user_id = u.user_id 
			    inner join product as p
                on n.product_id = p.product_id
			    where notice_match_no = any(select notice_id from notice where user_id=#{user_id}) 
			    	and notice_category = 'comment' 
			    	order by notice_match_no asc, notice_parent_no asc
		]]>
	</select>

	<!-- 상품후기 작성 -->
	<insert id="insertComment" parameterType="NoticeVO">
		<selectKey keyProperty="notice_id" resultType="String" order="BEFORE">
			select concat('notice_', (select nextval('notice')))
		</selectKey>
		insert into notice(notice_id, 
								user_id, 
								notice_category, 
								notice_title, 
								notice_body, 
								notice_grade, 
								notice_match_no, 
								product_id, 
								order_id,
								notice_parent_no)
						values(#{notice_id}, 
								#{user_id}, 
								'comment', 
								#{notice_title}, 
								#{notice_body}, 
								#{notice_grade}, 
								#{notice_id}, 
								#{product_id}, 
								#{order_id},
								'0')
	</insert>

	<select id="selectMatchID" resultType="String">
		<![CDATA[
			select count_no from sequences where sequence_name='notice'
		]]>
	</select>

	<!-- delete 
				from notice as n
				inner join image as i 
				on n.notice_id = i.image_match_no
				where notice_match_no=#{notice_id} -->
	<!-- 상품후기 삭제 -->
	<delete id="myCommentDelete" parameterType="String">
		<![CDATA[
			delete from notice where notice_match_no = #{notice_id}	
		]]>
	</delete>

	<!-- 상품후기 수정 페이지 -->
	<select id="myCommentUpdatePage" resultType="java.util.Map" parameterType="String">
		<![CDATA[
			select n.notice_id, n.notice_title, 
				n.notice_body, p.product_main_title, 
				i.image_file
			from notice n 
			inner join product p
			on n.product_id=p.product_id 
			inner join image i
			on n.notice_id=i.image_match_id
			where n.notice_id=#{notice_id}
		]]>
	</select>

	<!-- 상품후기 수정 -->
	<update id="myCommentUpdate" parameterType="NoticeVO">
		<![CDATA[
			update notice set
					notice_type = #{notice_type},
					notice_grade = #{notice_grade},
					notice_title = #{notice_title},
					notice_body = #{notice_body}
				where notice_id = #{notice_id}
		]]>
	</update>

</mapper>